
Re-Generating Developer API Documentation
-----------------------------------------

If you modify the source files, you may wish to regenerate the html 
api documentation. This documentation is extracted from the Fortran 
source files by the GDoc.py python script, which is distributed as
part of this package.  To generate html api documentation:

 - From within the pscf/doc directory, enter::

      > make devel-man

 - At the prompt "Enter name of rc configuration file:", enter::

      devel-man.rc

   The resulting documentation will be created in subdirectory 
   doc/devel-man, which will be created if it does not already exist. 

 - To remove old html documentation and start over, enter::

      > make clean

   This will remove the entire doc/api subdirectory.

Re-Generating Developer API Documentation
-----------------------------------------

   To generate a local copy of the user manual, enter::

      > make user-man


Preprocessor Generated Fortran Files
------------------------------------

The source code includes several *.f fortran files that generated 
from corresponding *.fp.f preprocessor input files by a preprocessor. 
In the current version of the code, the relevant fortran files are:

    src/build/scf_pd.f 
    src/build/iterate_mod.f 
    src/build/scf_mod.f

Up-to-date copies of these three files must exist in the src/build
directory before documentation can be built. Copies of these files
are included in the initial distribution, but can be removed by the
"very_clean" target of the src/build/Makefile. (So don't issue the 
command "make very_clean" unless this is what you want!). They are
not removed by the "make clean" command. 

The above fortran files are generated from the following preprocessor 
input files:

    src/scf_pd.fp.f
    src/iterate/iterate_mod.fp.f 
    src/scf/scf_mod.fp.f

If you modify any of these *.fp.f files, or remove the corresponding
*.f files from the src/build directory, and then use the Makefile in
src/build directory to re-compile the program, new versions of these 
files will be generated by the preprocessor and deposited in the 
src/build directory. This action is dictated by the definition of 
the corresponding *.f targets in src/build/Makefile, which list the
*.fp.f preprocessor files as dependencies for the *.f fortran files,
and by the the fact that the *.f fortran files are listed as 
dependences for the corresponding *.o targets for these three files.

The "devel-man" target of the documentation Makefile in the doc directory 
first temporarily copies these three *.f programs from scr/build to 
appropriate locations in the directory tree, each in the same directory 
as the corresponding *.fp.f source file, then builds the html 
documentation, and ends by removes these temporary copies of the 
*.f files. (Read the devel-man target of the Makefile if this is 
not clear). The directory structure of the api documentation, which 
mimics the structure of the src directory, is thus constructed as 
if each compilable *.f fortran were in the directory that contains 
the corresponding *.fp.f preprocessor input file.
